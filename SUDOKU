#include <stdio.h>
int main()
{
  int l, c, k=0, i=0, rtrn=0, soma1, soma2, soma3, soma4, soma5, soma6, soma7, soma8, soma9, n, x=1, somaQ=0, S[9][9];
  scanf("%d",&n);
  while(x<=n)
  {
  //LÃª a(s) matriz(es) inserida(s)
    for(l=0; l<9; l++)
    {
      for(c=0; c<9; c++)
      {
        scanf("%d",&S[l][c]);
        //analisa numero por numero e checa quantas vezes o mesmo numero se repete na matriz
        if(S[l][c]==1)
        {
          soma1+=1;
        }
        else
        {
          if(S[l][c]==2)
          {
            soma2+=1;
          }
          else
          {
            if(S[l][c]==3)
            {
              soma3+=1;
            }
            else
            {
              if(S[l][c]==4)
              {
                soma4+=1;
              }
              else
              {
                if(S[l][c]==5)
                {
                  soma5+=1;
                }
                else
                {
                  if(S[l][c]==6)
                  {
                    soma6+=1;
                  }
                  else
                  {
                    if(S[l][c]==7)
                    {
                      soma7+=1;
                    }
                    else
                    {
                      if(S[l][c]==8)
                      {
                        soma8+=1;
                      }
                      else
                      if(S[l][c]==9)
                      {
                        soma9+=1;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    //Verifica a coerencia das linhas, nao e 100% correto, mas e complementado pela verificacao em blocos 3x3
    for(l=0; l<9; l++)
    {
      if(S[l][0]*S[l][1]*S[l][2]*S[l][3]*S[l][4]*S[l][5]*S[l][6]*S[l][7]*S[l][8]!=362880)
      {
        rtrn+=1;
      }
    }
    //Verifica a coerencia das colunas
    for(c=0; c<9; c++)
    {
      if(S[0][c]*S[1][c]*S[2][c]*S[3][c]*S[4][c]*S[5][c]*S[6][c]*S[7][c]*S[8][c]!=362880)
      {
        rtrn+=1;
      }
    }
    //Verifica a matriz em blocos 3x3
    while(i<=6)
    {
      k=0;
      while(k<=6)
      {
        somaQ=0;
        for(l=i; l<3+i; l++)
        {
          for(c=k; c<3+k; c++)
          {
            somaQ+=S[l][c];
          }
        }
        if(somaQ!=45)
        {
          rtrn+=1;
          l=6;
        }
      k=k+3;
      }
    i=i+3;
    }
    //Cada Verificacao mal sucedida soma 1 a variavel rtrn,  dessa forma se a variavel for diferente de zero significa que a matriz analizada esta incorreta
    if(rtrn==0)
    {
      printf("Instancia %d\nSIM\n\n",x);
    }
    else
    {
      printf("Instancia %d\nNAO\n\n",x);
    }
    //Reseta as variaveis para nao influenciar as proximas leituras de matrizes
  x++;
  rtrn=0;
  i=0;
  k=0;
  soma1=0;
  soma2=0;
  soma3=0;
  soma4=0;
  soma5=0;
  soma6=0;
  soma7=0;
  soma8=0;
  soma9=0;
  }
return 0;
}
